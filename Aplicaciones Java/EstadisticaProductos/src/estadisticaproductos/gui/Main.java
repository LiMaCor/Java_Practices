package estadisticaproductos.gui;

import java.util.ArrayList;
import java.util.List;
import net.ausiasmarch.common.Convert;
import estadisticaproductos.modelo.Producto;
import estadisticaproductos.modelo.GestorProductos;
import estadisticaproductos.utils.Grid;
import estadisticaproductos.utils.RenderGrid;
import estadisticaproductos.utils.ValidatorAnnotation;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;

/**
 *
 * @author PixelZer0
 */
public class Main extends javax.swing.JFrame {

    //Variables
    
    private final GestorProductos gestorProductos;
    private final List<Producto> productos;
    private final String[] cabecera1 = {"Producto", "Categoría", "Existencias", 
                                        "Precio"};
    private final String[] cabecera2 = {"Producto", "Existencias"};
    private final String[] cabeceraTotales = {"Categoría", "Productos", 
                                            "Existencias", "Precio", 
                                            "Existencia media", "Precio medio"};
    
    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        productos = new ArrayList();
        gestorProductos = new GestorProductos();
        iniciaGrids();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextFieldNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldPrecio = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldExistencias = new javax.swing.JTextField();
        jButtonAñadir = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jComboBoxOrdenar = new javax.swing.JComboBox<>();
        jButtonBorrarProducto = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        gridProductos = new estadisticaproductos.utils.Grid();
        jButtonCalcular = new javax.swing.JButton();
        jComboBoxCategoria = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldBusqueda = new javax.swing.JTextField();
        jButtonBuscarProducto = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jTextFieldCategoriaProducto = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextFieldExistenciasProducto = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextFieldPrecioProducto = new javax.swing.JTextField();
        jButtonLimpiar = new javax.swing.JButton();
        jButtonSalir = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldNumeroProductos = new javax.swing.JTextField();
        jTextFieldTotalExistencias = new javax.swing.JTextField();
        jTextFieldValorStock = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        gridProductosMasExistencias = new estadisticaproductos.utils.Grid();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        gridResultadosTotales = new estadisticaproductos.utils.Grid();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Productos");
        setResizable(false);

        jLabel1.setText("Producto");

        jLabel2.setText("Categoría");

        jLabel3.setText("Precio");

        jLabel4.setText("Existencias");

        jButtonAñadir.setText("Añadir");
        jButtonAñadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAñadirActionPerformed(evt);
            }
        });

        jLabel5.setText("Ordenar por");

        jComboBoxOrdenar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nombre", "Categoria", "Menor a mayor precio", "Mayor a menor precio", "Menor a mayor existencias", "Mayor a menor existencias" }));
        jComboBoxOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxOrdenarActionPerformed(evt);
            }
        });

        jButtonBorrarProducto.setText("Borrar producto");
        jButtonBorrarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBorrarProductoActionPerformed(evt);
            }
        });

        gridProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nombre", "Categoría", "Precio", "Existencias"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(gridProductos);

        jButtonCalcular.setText("Calcular");
        jButtonCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCalcularActionPerformed(evt);
            }
        });

        jComboBoxCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alimentación", "Tecnología", "Moda", "Bricolaje", "Decoración", "Moviliario", "Deportivo", "Libros", "Música", "Juguetes" }));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Búsqueda"));

        jLabel11.setText("Producto");

        jButtonBuscarProducto.setText("Buscar");
        jButtonBuscarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarProductoActionPerformed(evt);
            }
        });

        jLabel12.setText("Categoría");

        jTextFieldCategoriaProducto.setEditable(false);
        jTextFieldCategoriaProducto.setBackground(new java.awt.Color(153, 153, 255));
        jTextFieldCategoriaProducto.setForeground(new java.awt.Color(255, 255, 255));

        jLabel13.setText("Existencias");

        jTextFieldExistenciasProducto.setEditable(false);
        jTextFieldExistenciasProducto.setBackground(new java.awt.Color(153, 153, 255));
        jTextFieldExistenciasProducto.setForeground(new java.awt.Color(255, 255, 255));

        jLabel14.setText("Precio");

        jTextFieldPrecioProducto.setEditable(false);
        jTextFieldPrecioProducto.setBackground(new java.awt.Color(153, 153, 255));
        jTextFieldPrecioProducto.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91)
                .addComponent(jButtonBuscarProducto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel14)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldCategoriaProducto, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                    .addComponent(jTextFieldExistenciasProducto)
                    .addComponent(jTextFieldPrecioProducto))
                .addGap(86, 86, 86))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jTextFieldCategoriaProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jTextFieldExistenciasProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jTextFieldBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBuscarProducto))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jTextFieldPrecioProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButtonLimpiar.setText("Limpiar");
        jButtonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarActionPerformed(evt);
            }
        });

        jButtonSalir.setText("Salir");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });

        jTabbedPane1.setToolTipText("");

        jLabel6.setText("Nº de productos");

        jLabel7.setText("Total de existencias");

        jLabel8.setText("Valor total (stock)");

        jTextFieldNumeroProductos.setEditable(false);
        jTextFieldNumeroProductos.setBackground(new java.awt.Color(153, 153, 255));
        jTextFieldNumeroProductos.setForeground(new java.awt.Color(255, 255, 255));

        jTextFieldTotalExistencias.setEditable(false);
        jTextFieldTotalExistencias.setBackground(new java.awt.Color(153, 153, 255));
        jTextFieldTotalExistencias.setForeground(new java.awt.Color(255, 255, 255));

        jTextFieldValorStock.setEditable(false);
        jTextFieldValorStock.setBackground(new java.awt.Color(153, 153, 255));
        jTextFieldValorStock.setForeground(new java.awt.Color(255, 255, 255));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Productos con mayor nº de existencias"));

        gridProductosMasExistencias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Producto", "Existencias"
            }
        ));
        jScrollPane2.setViewportView(gridProductosMasExistencias);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldNumeroProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldValorStock, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldTotalExistencias, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextFieldNumeroProductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextFieldTotalExistencias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextFieldValorStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Resultados estadísticos", jPanel1);

        gridResultadosTotales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Categoría", "Productos", "Existencias", "Precio", "Existencia media", "Precio medio"
            }
        ));
        jScrollPane3.setViewportView(gridResultadosTotales);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 923, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Resultados totales", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldNombre)
                            .addComponent(jComboBoxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(85, 85, 85)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldExistencias, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonAñadir, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxOrdenar, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonBorrarProducto)
                        .addGap(107, 107, 107))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButtonCalcular)
                                .addGap(49, 49, 49))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButtonLimpiar)
                                .addGap(42, 42, 42)
                                .addComponent(jButtonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(62, 62, 62))))
                    .addComponent(jTabbedPane1)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jTextFieldPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jButtonAñadir)))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldExistencias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jComboBoxOrdenar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBorrarProducto))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonCalcular)
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonLimpiar)
                    .addComponent(jButtonSalir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Añade un producto a la lista
     * @param evt 
     */
    
    private void jButtonAñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAñadirActionPerformed
        
        // Creamos un contenedor donde almacenar los mensajes de error
        
        StringBuilder sb = new StringBuilder();
        
        // Variables de un producto
        
        String nombre, categoria, precio, existencias;
        double precioFormateado;
        long existenciasFormateado;
        
        // Objeto para validar las anotaciones de la clase Producto
        
        ValidatorAnnotation validador = new ValidatorAnnotation();
        
        // Obtenemos los datos de entrada
        
        nombre = jTextFieldNombre.getText();
        categoria = jComboBoxCategoria.getSelectedItem().toString();
        precio = jTextFieldPrecio.getText();
        existencias = jTextFieldExistencias.getText();
        
        // Realizamos las validaciones pertinentes:
        
        // Comprobamos si un producto ya está en la lista
        
        if (gestorProductos.buscarProducto(nombre) != null) {
            mensaje(" - El producto " + nombre + " ya está en la lista.");
            return;
        }
        
        // Comprobamos que el precio sea válido
        
        if (!Convert.isValidDouble(precio)) {
            sb.append(" - Precio: valor no válido.");
        }
        
        // Comprobamos que las existencias sean válidas
        
        if (!Convert.isValidInt(existencias)) {
            sb.append(" - Existencias: valor no válido.");
        }
        
        // Mostramos los posibles mensajes de error en la entrada de datos
        
        if (mensajesError(sb.toString())) {
            return;
        }
        
        // Convertimos los datos
        
        precioFormateado = Convert.parseDouble(precio);
        existenciasFormateado = Convert.parseLong(existencias);
        
        // Creamos el producto
        
        Producto producto = new Producto(nombre, categoria, existenciasFormateado, 
                                    precioFormateado);
        
        // Validamos los datos del producto usando el objeto "validador" y
        // añadimos la lista de errores al StringBuilder
        
        sb.append(validador.getListErrors(producto));
        
        // Si hay mensajes de validación, los mostramos
        
        if (mensajesError(sb.toString())) {
            return;
        }
        
        // Añadimos el producto a la lista de productos
        
        productos.add(producto);
        
        // Pasamos la lista de productos al gestor de productos
        
        gestorProductos.setProductos(productos);
        
        // Limpiamos los campos de entrada
        
        limpiarCamposEntrada();
        
        // Mostramos la lista de productos en el grid
        
        actualizarGrid(productos);
        
        // Ordenamos la lista
        
        ordenar();
        
        // Activamos botones
        
        activaOnOff(true);
        
    }//GEN-LAST:event_jButtonAñadirActionPerformed

    /**
     * Borra un producto de la lista
     * @param evt 
     */
    
    private void jButtonBorrarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBorrarProductoActionPerformed
        
        // Variables
        
        String producto;
        
        // Seleccionamos una fila del grid
        
        int fila = gridProductos.getSelectedRow();
        
        // Cuando hay una fila seleccionada, obtenemos la columna con el nombre
        // y después llamamos al método "borrarProducto":
        
        if (fila >= 0) {
            producto = gridProductos.getValueAt(fila, 0).toString();
            gestorProductos.borrarProducto(producto);
        }
        
        // Si la lista está vacía:
        
        if (productos.isEmpty()) {
            activaOnOff(false);
            limpiarDatos();
            return;
        }
        
        // Actualizamos el grid
        
        actualizarGrid(productos);
        
    }//GEN-LAST:event_jButtonBorrarProductoActionPerformed

    /**
     * Obtiene los datos estadisticos
     * @param evt 
     */
    
    private void jButtonCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCalcularActionPerformed
        
        // Variables
        
        int numProductos = gestorProductos.numProductos();
        long totalExistencias = gestorProductos.sumaExistencias();
        double valorStock = gestorProductos.sumaPrecios();
        Producto productoMasExistencias = gestorProductos.productoMayorExistencias();
        
        // Mostramos los datos
        
        jTextFieldNumeroProductos.setText(Convert.format(numProductos));
        jTextFieldTotalExistencias.setText(Convert.format(totalExistencias));
        jTextFieldValorStock.setText(Convert.format(valorStock, 2));
        
        // Iniciamos los grids correspondientes
        
        List<List> lista2 = gestorProductos.asListaProductosMasExistencias(productos);
        List<List> listaTotales = gestorProductos.asListaTotales();
        
        gridProductosMasExistencias.loadFromList(lista2, cabecera2);
        gridResultadosTotales.loadFromList(listaTotales, cabeceraTotales);
        
        // Actualizamosel grid principal
        
        actualizarGrid(productos);
        
        //jTextFieldProductoMasExistencias.setText(productoMasExistencias.getNombre());
        //jTextFieldMayorExistencias.setText(Convert.format(
        //                            productoMasExistencias.getExistencias()));
        
    }//GEN-LAST:event_jButtonCalcularActionPerformed

    /**
     * Limpia los datos
     * @param evt 
     */
    
    private void jButtonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarActionPerformed
        
        activaOnOff(false);
        limpiarDatos();
        
    }//GEN-LAST:event_jButtonLimpiarActionPerformed

    /**
     * Sale de la aplicación
     * @param evt 
     */
    
    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        
        dispose();
        
    }//GEN-LAST:event_jButtonSalirActionPerformed

    /**
     * Busca un producto en la lista de productos
     * @param evt 
     */
    
    private void jButtonBuscarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarProductoActionPerformed
        
        // Variables
        
        double precio;
        long existencias;
        
        String nombre = jTextFieldBusqueda.getText();
        
        // Buscamos el producto
        
        Producto producto = gestorProductos.buscarProducto(nombre);
        
        if (producto == null) {
            mensaje("No se ha podido encontrar el producto.");
            return;
        }
        
        // Obtenemos los datos del producto
        
        precio = producto.getPrecio();
        existencias = producto.getExistencias();
        
        jTextFieldCategoriaProducto.setText(producto.getCategoria());
        jTextFieldExistenciasProducto.setText(Convert.format(existencias));
        jTextFieldPrecioProducto.setText(Convert.format(precio, 2));
        
    }//GEN-LAST:event_jButtonBuscarProductoActionPerformed

    private void jComboBoxOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxOrdenarActionPerformed
        
        ordenar();
        
    }//GEN-LAST:event_jComboBoxOrdenarActionPerformed

    /**
     * Limpia los campos de entrada
     */
    
    private void limpiarCamposEntrada(){
        jTextFieldNombre.setText("");
        jTextFieldPrecio.setText("");
        jTextFieldExistencias.setText("");
    }
    
    /**
     * Comprueba si hay mensajes de error
     * @param mensaje
     * @return boolean
     */
    
    private boolean mensajesError(String mensaje) {
        if (mensaje.length() > 0) {
            mensaje(mensaje);
            return true;
        }
        return false;
    }
    
    /**
     * Activa o desactiva los componentes
     * @param sn 
     */
    
    private void activaOnOff(boolean sn) {
        jButtonCalcular.setEnabled(sn);
        jButtonBorrarProducto.setEnabled(sn);
        jButtonBuscarProducto.setEnabled(sn);
        gridProductos.setEnabled(sn);
    }
    
    /**
     * Actualiza el grid usando la lista de productos
     * @param productos
     */
    
    private void actualizarGrid(List<Producto> productos) {
        // int fila = 0;    
        
        // Convertimos el objeto producto en un List
        // List lista = gestorProductos.asListProducto(productos.get(0));
      
        List<List> lista = gestorProductos.asListaProductos(productos);
        
        gridProductos.clear();
        gridProductos.loadFromList(lista, cabecera1);
        
      //  gridCiudades.setTypeColumn(lista, columnas, false);
       /* 
        for (Ciudad c : ciudades){
            gridCiudades.setValueAt(c.getComunidad(),fila, 0);
            gridCiudades.setValueAt(c.getCiudad(),fila, 1);
            gridCiudades.setValueAt(c.getHabitantes(),fila, 2);
            fila++;
        }*/
       
        gridProductos.firstRow();
    }
    
    
    
    /**
     * Ordena la lista de productos
     */
    
    private void ordenar() {
        
        // Si la lista de productos no esta vacia
        
        if (!productos.isEmpty()) {
            int valor = jComboBoxOrdenar.getSelectedIndex();
            switch (valor) {
                case 0:
                    gestorProductos.ordenarNombreProductoAlfa();
                    break;
                case 1:
                    gestorProductos.ordenarCategoriaProducto();
                    break;
                case 2:
                    gestorProductos.ordenarPreciosAsc();
                    break;
                case 3:
                    gestorProductos.ordenarPreciosDesc();
                    break;
                case 4:
                    gestorProductos.ordenarExistenciasAsc();
                    break;
                case 5:
                    gestorProductos.ordenarExistenciasDesc();
                    break;
            }
            
             actualizarGrid(productos);
        }
    }
    
    /**
     * Limpia los datos del formulario
     */
    
    private void limpiarDatos() {
        jTextFieldNumeroProductos.setText("");
        jTextFieldTotalExistencias.setText("");
        jTextFieldValorStock.setText("");
        //jTextFieldProductoMasExistencias.setText("");
        //jTextFieldMayorExistencias.setText("");
        jTextFieldBusqueda.setText("");
        jTextFieldCategoriaProducto.setText("");
        jTextFieldExistenciasProducto.setText("");
        jTextFieldPrecioProducto.setText("");
        jComboBoxCategoria.setSelectedIndex(0);
        jComboBoxOrdenar.setSelectedIndex(0);
        gridProductos.clear();
        gridProductosMasExistencias.clear();
        gridResultadosTotales.clear();
        productos.clear();
        iniciaGrids();
    }
    
    /**
     * Muestra un mensaje en un jOptionPane
     * @param mensaje 
     */
    
    private void mensaje(String mensaje) {
        JOptionPane.showMessageDialog(this, mensaje);
    }
    
    private void iniciaGrids() {
        iniciaGrid(gridProductos, cabecera1);
        iniciaGrid(gridProductosMasExistencias, cabecera2);
        iniciaGrid(gridResultadosTotales, cabeceraTotales);
    }
    
    private void iniciaGrid(Grid grid, String[] columnas) {
        RenderGrid formato = new RenderGrid();
        formato.setColorFillSelected(Color.WHITE, new Color(20,120,255));
        
        // Grid principal de productos
        
        grid.getTableHeader().setBackground(Color.BLUE);
        grid.getTableHeader().setForeground(Color.white);
        grid.setColumnIdentifiers(columnas);  // cabecera
        grid.setNumRows(5);                   // filas del grid
        grid.setEnabled(false);               // activa el grid    
        grid.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        grid.getTableHeader().setReorderingAllowed(false);
        grid.setDefaultRenderer(String.class, formato);
        grid.setDefaultRenderer(Integer.class, formato);
        grid.setDefaultRenderer(Long.class, formato);
        grid.setDefaultRenderer(Double.class, formato);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
                
        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Main main = new Main();
                main.getContentPane().setBackground(Color.WHITE);
                main.setLocationRelativeTo(null);
                main.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private estadisticaproductos.utils.Grid gridProductos;
    private estadisticaproductos.utils.Grid gridProductosMasExistencias;
    private estadisticaproductos.utils.Grid gridResultadosTotales;
    private javax.swing.JButton jButtonAñadir;
    private javax.swing.JButton jButtonBorrarProducto;
    private javax.swing.JButton jButtonBuscarProducto;
    private javax.swing.JButton jButtonCalcular;
    private javax.swing.JButton jButtonLimpiar;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JComboBox<String> jComboBoxCategoria;
    private javax.swing.JComboBox<String> jComboBoxOrdenar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextFieldBusqueda;
    private javax.swing.JTextField jTextFieldCategoriaProducto;
    private javax.swing.JTextField jTextFieldExistencias;
    private javax.swing.JTextField jTextFieldExistenciasProducto;
    private javax.swing.JTextField jTextFieldNombre;
    private javax.swing.JTextField jTextFieldNumeroProductos;
    private javax.swing.JTextField jTextFieldPrecio;
    private javax.swing.JTextField jTextFieldPrecioProducto;
    private javax.swing.JTextField jTextFieldTotalExistencias;
    private javax.swing.JTextField jTextFieldValorStock;
    // End of variables declaration//GEN-END:variables
}